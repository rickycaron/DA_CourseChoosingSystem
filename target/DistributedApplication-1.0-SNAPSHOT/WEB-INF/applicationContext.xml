<?xml version="1.0" encoding="UTF-8"?>

    <beans xmlns="http://www.springframework.org/schema/beans"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:context="http://www.springframework.org/schema/context"
           xmlns:aop="http://www.springframework.org/schema/aop"
           xmlns:tx="http://www.springframework.org/schema/tx"
           xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:component-scan base-package="com.a20da10.Entity.spring"/>
    <context:component-scan base-package="com.a20da10.service.spring"/>
    <context:component-scan base-package="com.a20da10.dao.spring"/>
    <context:component-scan base-package="com.a20da10.activemq"/>

    <!-- import the database connection properties file    -->
    <context:property-placeholder location="WEB-INF/dbConfig.properties"/>

    <!--    create the connection pool-->
        <bean id="dsConnection" class="com.mchange.v2.c3p0.ComboPooledDataSource">
            <property name="user" value="${jdbc.user}"/>
            <property name="password" value="${jdbc.password}"/>
            <property name="driverClass" value="${jdbc.driverClass}"/>
            <property name="jdbcUrl" value="${jdbc.jdbcUrl}"/>
            <property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>
        </bean>

    <!-- create hibernate session factory once for entire application    -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
    <!-- conenct the db source to the hibernate session factory        -->
        <property name="dataSource" ref="dsConnection"/>
    <!-- scan the entity to be used in spring container-->
        <property name="packagesToScan" value="com.a20da10.Entity.spring"/>

<!--        <property name="hibernate.enable_lazy_load_no_trans" >true</property>-->

        <!-- some hibernate properties setting       -->
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.connection.url">jdbc:mysql://localhost:3306/school</prop>
                <prop key="hibernate.connection.driver_class">com.mysql.cj.jdbc.Driver</prop>
                <!--                <prop key="hibernate.connection.url"><![CDATA[jdbc:mysql://localhost:3306/sys?useTimeZone=true&serverTimezone=UTC&autoReconnect=true&useSSL=false]]></prop>-->
<!--                <prop key="hibernate.connection.driver_class">com.mysql.cj.jdbc.Driver</prop>-->
            </props>
        </property>
    </bean>


    <bean id="myTransactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <tx:annotation-driven transaction-manager="myTransactionManager"/>

    <!--    JMS Setting-->
<!--    1. set prodeucer-->
    <bean id="jmsFactory" class="org.apache.activemq.pool.PooledConnectionFactory" destroy-method="stop">
        <property name="connectionFactory">
<!--            dependency injection for implementation-->
            <bean class="org.apache.activemq.ActiveMQConnectionFactory">
                <property name="brokerURL" value="tcp://localhost:61616"/>
            </bean>
        </property>
        <property name="maxConnections" value="80"/>
    </bean>
<!--    2. set destination for queue-->
    <bean id="destinationQueue" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg index="0" value="studentQueue"/>
    </bean>
<!--    3.generate jms operator for send&receive-->
    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="jmsFactory"/>
        <property name="defaultDestination" ref="destinationQueue"/>
        <property name="messageConverter">
            <bean class="org.springframework.jms.support.converter.SimpleMessageConverter"/>
        </property>
    </bean>
<!--    4. generate general listener-->
    <bean id="jmsLinstener" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="jmsFactory"/>
        <property name="destination" ref="destinationQueue"/>
<!--        callback function-->
        <property name="messageListener" ref="myMessageListener"/>
    </bean>
</beans>